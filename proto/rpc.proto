syntax = "proto3";

option go_package = "github.com/SuhasHebbar/CS739-P2/proto";
/* import "google/protobuf/timestamp.proto"; */
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

service RaftRpc {
	rpc Get(Key) returns (Response) {}
	rpc Set(KeyValuePair) returns (Response) {}
	rpc Delete(Key) returns (Response) {}
	rpc RequestVote(RequestVoteRequest) returns (RequestVoteReply) {}
	rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse) {}
	rpc Partition(google.protobuf.BoolValue) returns (google.protobuf.Empty) {}
}

message AppendEntriesRequest {
	int32 term = 1;
	int32 leaderId = 2;
	int32 prevLogIndex = 3;
	int32 prevLogTerm = 4;
	repeated LogEntry entries = 5;
	int32 leaderCommit = 6;
}

message AppendEntriesResponse {
	int32 term = 1;
	bool success = 2;
	int32 peerId = 3;
}

message RequestVoteRequest {
	int32 term = 1; 
	int32 candidateId = 2;
	int32 lastLogIndex = 3;
	int32 lastLogTerm = 4;
}

message RequestVoteReply {
	int32 term = 1;
	bool voteGranted = 2;
	int32 peerId = 3;
}

message Key {
	string key = 1;
}

message Response {
	bool ok = 1;
	string response = 2;
	bool isLeader = 3;
	int32 newLeader = 4;
}

message KeyValuePair {
	string key = 1;
	string value = 2;
}

enum OperationType {
	NOOP = 0;
	GET = 1;
	SET = 2;
	DELETE = 3;
}

message Operation {
	OperationType type = 1;
	string key = 2;
	string value = 3;
}

message LogEntry {
	int32 term = 1;
	int32 index = 2;
	Operation operation = 3;
}

message StoredVote {
	int32 term = 1;
	int32 votedFor = 2;
}

message StoredLog {
	repeated LogEntry logs = 1;
}
